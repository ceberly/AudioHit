{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2","program":"/Users/icaroferre/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","ot_utils","--edition=2018","/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=d84ce0712ceb2ecd","-C","extra-filename=-d84ce0712ceb2ecd","--out-dir","/Users/icaroferre/Dropbox/Work/GitHub/AudioHit/code/target/rls/debug/deps","-L","dependency=/Users/icaroferre/Dropbox/Work/GitHub/AudioHit/code/target/rls/debug/deps","--extern","hound=/Users/icaroferre/Dropbox/Work/GitHub/AudioHit/code/target/rls/debug/deps/libhound-aab02344310353b0.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/icaroferre/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/icaroferre/Dropbox/Work/GitHub/AudioHit/code/target/rls/debug/deps/libot_utils-d84ce0712ceb2ecd.rmeta"},"prelude":{"crate_id":{"name":"ot_utils","disambiguator":[9600541560996638364,109185482215875037]},"crate_root":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src","external_crates":[{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12036975874919608542,5263022788913298406]}},{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[12685141629749505872,14384861886608688020]}},{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12340268601481677029,141089188236804857]}},{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[15672008270625504507,2674350736569664385]}},{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8066833728442541494,18441909558183702075]}},{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[18762513522875297,12336434793998892008]}},{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6386993580917896473,10528920155300651342]}},{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[63588754982269101,9431025315804350196]}},{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[6693364396395125059,14894688029700829747]}},{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[16603275402718143122,14067629355158943163]}},{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[10587581080033021223,10965447884951720582]}},{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[4572683954975939282,9115057533031414731]}},{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12668818391670187517,11018761801619609470]}},{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[13970895335240303563,1394509620320337557]}},{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","num":15,"id":{"name":"hound","disambiguator":[3434227244967749505,15480426634724851449]}}],"span":{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","byte_start":1,"byte_end":9641,"line_start":2,"line_end":261,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","byte_start":1,"byte_end":9641,"line_start":2,"line_end":261,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":11},{"krate":0,"index":18}],"decl_id":null,"docs":" ## About this library\n \n \n This library is designed to create .wav and .ot files for the Elektron Octatrack by\n concatenating other audio samples (.wav) and settings each added file as a slice in the final\n file.\n","sig":null,"attributes":[{"value":"! ## About this library","span":{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","byte_start":1,"byte_end":26,"line_start":2,"line_end":2,"column_start":1,"column_end":26}},{"value":"! ","span":{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","byte_start":27,"byte_end":31,"line_start":3,"line_end":3,"column_start":1,"column_end":5}},{"value":"! ","span":{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","byte_start":32,"byte_end":36,"line_start":4,"line_end":4,"column_start":1,"column_end":5}},{"value":"! This library is designed to create .wav and .ot files for the Elektron Octatrack by","span":{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","byte_start":37,"byte_end":124,"line_start":5,"line_end":5,"column_start":1,"column_end":88}},{"value":"! concatenating other audio samples (.wav) and settings each added file as a slice in the final","span":{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","byte_start":125,"byte_end":222,"line_start":6,"line_end":6,"column_start":1,"column_end":98}},{"value":"! file.","span":{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","byte_start":223,"byte_end":232,"line_start":7,"line_end":7,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":7},"span":{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","byte_start":363,"byte_end":370,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"name":"OTSlice","qualname":"::OTSlice","value":"OTSlice { loop_point, start_point, length }","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10}],"decl_id":null,"docs":" Struct used for the individual slices\n","sig":null,"attributes":[{"value":"/ Struct used for the individual slices","span":{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","byte_start":310,"byte_end":351,"line_start":15,"line_end":15,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":8},"span":{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","byte_start":381,"byte_end":391,"line_start":17,"line_end":17,"column_start":9,"column_end":19},"name":"loop_point","qualname":"::OTSlice::loop_point","value":"u32","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9},"span":{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","byte_start":406,"byte_end":417,"line_start":18,"line_end":18,"column_start":9,"column_end":20},"name":"start_point","qualname":"::OTSlice::start_point","value":"u32","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":10},"span":{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","byte_start":433,"byte_end":439,"line_start":19,"line_end":19,"column_start":9,"column_end":15},"name":"length","qualname":"::OTSlice::length","value":"u32","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11},"span":{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","byte_start":606,"byte_end":612,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"Slicer","qualname":"::Slicer","value":"Slicer { output_folder, output_filename, sample_rate, slices, tempo }","parent":null,"children":[{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17}],"decl_id":null,"docs":" The Slicer struct is the main struct of the library and it's responsable for parsing .wav files and generating the final .wav and .ot files \n","sig":null,"attributes":[{"value":"/ The Slicer struct is the main struct of the library and it's responsable for parsing .wav files and generating the final .wav and .ot files ","span":{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","byte_start":450,"byte_end":594,"line_start":24,"line_end":24,"column_start":1,"column_end":145}}]},{"kind":"Field","id":{"krate":0,"index":12},"span":{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","byte_start":694,"byte_end":707,"line_start":27,"line_end":27,"column_start":9,"column_end":22},"name":"output_folder","qualname":"::Slicer::output_folder","value":"std::string::String","parent":{"krate":0,"index":11},"children":[],"decl_id":null,"docs":" Folder to which the final .ot and .wav files will be generated\n","sig":null,"attributes":[{"value":"/ Folder to which the final .ot and .wav files will be generated","span":{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","byte_start":619,"byte_end":685,"line_start":26,"line_end":26,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":13},"span":{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","byte_start":791,"byte_end":806,"line_start":29,"line_end":29,"column_start":9,"column_end":24},"name":"output_filename","qualname":"::Slicer::output_filename","value":"std::string::String","parent":{"krate":0,"index":11},"children":[],"decl_id":null,"docs":" Name of the final .ot and .wav files (without extension)\n","sig":null,"attributes":[{"value":"/ Name of the final .ot and .wav files (without extension)","span":{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","byte_start":722,"byte_end":782,"line_start":28,"line_end":28,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":14},"span":{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","byte_start":866,"byte_end":877,"line_start":31,"line_end":31,"column_start":9,"column_end":20},"name":"sample_rate","qualname":"::Slicer::sample_rate","value":"u32","parent":{"krate":0,"index":11},"children":[],"decl_id":null,"docs":" Sample rate of the audio samples\n","sig":null,"attributes":[{"value":"/ Sample rate of the audio samples","span":{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","byte_start":821,"byte_end":857,"line_start":30,"line_end":30,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":15},"span":{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","byte_start":918,"byte_end":924,"line_start":33,"line_end":33,"column_start":9,"column_end":15},"name":"slices","qualname":"::Slicer::slices","value":"std::vec::Vec<OTSlice>","parent":{"krate":0,"index":11},"children":[],"decl_id":null,"docs":" Vector of slices\n","sig":null,"attributes":[{"value":"/ Vector of slices","span":{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","byte_start":889,"byte_end":909,"line_start":32,"line_end":32,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":17},"span":{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","byte_start":1016,"byte_end":1021,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"name":"tempo","qualname":"::Slicer::tempo","value":"u32","parent":{"krate":0,"index":11},"children":[],"decl_id":null,"docs":" Tempo / BPM of the final .wav file\n","sig":null,"attributes":[{"value":"/ Tempo / BPM of the final .wav file","span":{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","byte_start":969,"byte_end":1007,"line_start":35,"line_end":35,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","byte_start":1112,"byte_end":1115,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Slicer>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of the Slicer struct\n","sig":null,"attributes":[{"value":"/ Creates a new instance of the Slicer struct","span":{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","byte_start":1053,"byte_end":1100,"line_start":44,"line_end":44,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","byte_start":1457,"byte_end":1462,"line_start":58,"line_end":58,"column_start":12,"column_end":17},"name":"clear","qualname":"<Slicer>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears out the slice vector and resets sample offset\n","sig":null,"attributes":[{"value":"/ Clears out the slice vector and resets sample offset","span":{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","byte_start":1389,"byte_end":1445,"line_start":57,"line_end":57,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","byte_start":1705,"byte_end":1713,"line_start":66,"line_end":66,"column_start":12,"column_end":20},"name":"add_file","qualname":"<Slicer>::add_file","value":"fn (&mut self, filepath: String) -> Result<&'static str, &'static str>","parent":null,"children":[],"decl_id":null,"docs":" Appends new audio file (.wav) to the concatenated wav file and creates a new slice\n","sig":null,"attributes":[{"value":"/ Appends new audio file (.wav) to the concatenated wav file and creates a new slice","span":{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","byte_start":1607,"byte_end":1693,"line_start":65,"line_end":65,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","byte_start":5225,"byte_end":5241,"line_start":141,"line_end":141,"column_start":12,"column_end":28},"name":"generate_ot_file","qualname":"<Slicer>::generate_ot_file","value":"fn (&mut self) -> Result<&'static str, &'static str>","parent":null,"children":[],"decl_id":null,"docs":" Generates the .ot file for the Octatrack and renames the concat .wav file to the same name as the .ot file\n","sig":null,"attributes":[{"value":"/ Generates the .ot file for the Octatrack and renames the concat .wav file to the same name as the .ot file","span":{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","byte_start":5103,"byte_end":5213,"line_start":140,"line_end":140,"column_start":5,"column_end":115}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","byte_start":1038,"byte_end":1044,"line_start":41,"line_end":41,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/icaroferre/.cargo/registry/src/github.com-1ecc6299db9ec823/ot_utils-0.1.2/src/lib.rs","byte_start":1038,"byte_end":1044,"line_start":41,"line_end":41,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":11},"to":{"krate":4294967295,"index":4294967295}}]}